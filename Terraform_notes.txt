Terrafrom Provider:
===============
# Configure the AWS Provider
provider "aws" {
  region = "us-east-1"
}

S3 Bucket Creation:

#to create S3 bucket in AWS
resource "aws_s3_bucket" "mybucket" {
  bucket = "rajjallus3"
}

Data sources:
==========
#object not managed by terraform
data "aws_caller_identity" "current" {}

data "aws_availability_zones" "available" {
  state = "available"
}

 output "aws_caller_info" {
   value = data.aws_caller_identity.current
 }
#outputs:
=======
#outputs are printed by cli after apply
#outputs are retrieved by at any time of running by using terraform output

output "bucket_info" {
  value = "aws_s3_bucket.rajjallus3"
}

#interpollation:
===========
#subsuite values into the the string
resource "aws_s3_bucket" "rajjallus3" {
  bucket = "${data.aws_caller_identity.current.account_id}-rajjallus3"
}


Dependency:
=========
#Resources can depend on one another. terraform will ensure that all dependencies are met before craeting the resource. dependency can be implict or explicit.
resource "aws_s3_bucket" "rajjallus5" {
  bucket = "${data.aws_caller_identity.current.account_id}-rajjallus5"
  tags = {
    #Implict Dependency
    dependency = aws_s3_bucket.rajjallus4.arm
  }
}

resource "aws_s3_bucket" "rajjallus5" {
  bucket     = "${data.aws_caller_identity.current.account_id}-rajjallus5"
  #explict
  depends_on = [
    aws_s3_bucket.rajjallus4
  ]
}

VPC Vreation using Terraform:
=======================

vpc:

create vpc
create subnet public& private 
Create Internet gate way 
create elastic ip
create Nat gate way
create route table
subnet association with route table
craete security group
